# Generated by Django 5.2 on 2025-04-09 14:18

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CountyDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image', models.CharField(max_length=100)),
                ('region', models.CharField(choices=[('Central', 'Central'), ('Coast', 'Coast'), ('Eastern', 'Eastern'), ('Nairobi', 'Nairobi'), ('North Eastern', 'North Eastern'), ('Nyanza', 'Nyanza'), ('Rift Valley', 'Rift Valley'), ('Western', 'Western')], default='Nairobi', max_length=100)),
                ('rating', models.DecimalField(blank=True, decimal_places=1, help_text='e.g., 4.9', max_digits=3, null=True)),
                ('review_count', models.PositiveIntegerField(blank=True, null=True)),
                ('overview', models.TextField(blank=True, help_text='A brief introduction to the county.')),
                ('population', models.CharField(blank=True, help_text='e.g., 1.2 million', max_length=50)),
                ('languages', models.CharField(blank=True, help_text='e.g., English, Swahili', max_length=255)),
                ('timezone', models.CharField(blank=True, help_text='e.g., GMT+3', max_length=50)),
                ('best_time_to_visit', models.CharField(blank=True, help_text='e.g., October to April', max_length=50)),
                ('average_temp', models.CharField(blank=True, help_text='e.g., 24°C (75°F)', max_length=50)),
                ('season', models.CharField(blank=True, help_text='e.g., Summer', max_length=50)),
                ('temperature_range', models.CharField(blank=True, help_text='e.g., 25-32°C', max_length=50)),
                ('months', models.CharField(blank=True, help_text='e.g., Dec-Feb', max_length=50)),
                ('weather_description', models.CharField(blank=True, help_text='e.g., Warm and dry', max_length=255)),
                ('average_income', models.CharField(blank=True, help_text='e.g., $15,000 per year', max_length=50)),
                ('major_industries', models.TextField(blank=True, help_text='List of major industries, e.g., Tourism, Agriculture')),
                ('cost_of_living_rent', models.CharField(blank=True, help_text='e.g., $400-600', max_length=100)),
                ('cost_of_living_utilities', models.CharField(blank=True, help_text='e.g., $50-100', max_length=100)),
                ('meal_cost', models.CharField(blank=True, help_text='e.g., $10-20 for mid-range meal', max_length=100)),
                ('transport_cost', models.CharField(blank=True, help_text='e.g., $50 per month', max_length=100)),
                ('hospital_name', models.CharField(blank=True, max_length=255)),
                ('hospital_type', models.CharField(blank=True, help_text='e.g., Public or Private', max_length=50)),
                ('specialties', models.CharField(blank=True, help_text='e.g., Cardiology, Neurology', max_length=255)),
                ('health_insurance_recommendation', models.BooleanField(default=True)),
                ('universities', models.TextField(blank=True, help_text='List notable universities')),
                ('literacy_rate', models.DecimalField(blank=True, decimal_places=1, help_text='e.g., 94.3', max_digits=4, null=True)),
                ('transportation_options', models.TextField(blank=True, help_text='e.g., Bus, Rail')),
                ('utilities', models.TextField(blank=True, help_text='e.g., electricity: KPLC, internet: Fiber')),
                ('safety_index', models.CharField(blank=True, help_text='e.g., Moderate', max_length=50)),
                ('safe_areas', models.TextField(blank=True, help_text='e.g., CBD, Riverside')),
                ('police_contact', models.CharField(blank=True, help_text='Police contact e.g., 999', max_length=20)),
                ('ambulance_contact', models.CharField(blank=True, help_text='Ambulance contact e.g., 911', max_length=20)),
                ('county_emergency_contact', models.CharField(blank=True, help_text='County emergency contact e.g., 112', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Destinations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('category', models.CharField(max_length=255)),
                ('county', models.CharField(max_length=255)),
                ('images', models.CharField(max_length=255)),
                ('region', models.CharField(blank=True, choices=[('Central', 'Central'), ('Coast', 'Coast'), ('Eastern', 'Eastern'), ('Nairobi', 'Nairobi'), ('North Eastern', 'North Eastern'), ('Nyanza', 'Nyanza'), ('Rift Valley', 'Rift Valley'), ('Western', 'Western')], default='Nairobi', max_length=100)),
                ('description', models.TextField()),
                ('hours_of_operation', models.CharField(help_text='e.g., Mon-Fri 9am-5pm', max_length=255)),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact_website', models.URLField(blank=True, null=True)),
                ('admission_fees', models.CharField(blank=True, help_text='e.g., Free, $10 per person', max_length=255, null=True)),
                ('top_features', models.CharField(blank=True, max_length=255)),
                ('best_times_to_visit', models.CharField(blank=True, help_text='e.g., Evening, Off-peak hours', max_length=255)),
                ('average_rating', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('review_count', models.PositiveIntegerField(default=0)),
                ('map_location', models.CharField(blank=True, help_text='Map coordinates or embedded map link', max_length=255)),
                ('image_url', models.CharField(blank=True, help_text='url src for the image', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('full_name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DestinationsImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.CharField(blank=True, max_length=100)),
                ('caption', models.CharField(blank=True, help_text='Optional caption for the image', max_length=255)),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='DestinationsImages', to='listings.destinations')),
            ],
        ),
    ]
